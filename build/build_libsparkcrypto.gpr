project Build_Libsparkcrypto
is
   type Mode_Type      is ("debug", "release");
   type Arch_Type      is ("x86_64", "i686");
   type Endianess_Type is ("little_endian", "bit_endian");
   type IO_Type        is ("textio", "nullio");
   type Runtime_Type   is ("native", "zfp");

   Mode      : Mode_Type := external ("mode", "release");
   Arch      : Arch_Type := external ("arch", "x86_64");
   Endianess : Endianess_Type := external ("endianess", "little_endian");
   IO        : IO_Type := external ("io", "textio");
   Runtime   : Runtime_Type := external ("runtime", "native");

   Src         := "../src/";

   Source_Dirs :=
      (Src & "ada/" & IO,
       Src & "ada/" & Arch,
       Src & "ada/generic",
       Src & "shared/" & Endianess,
       Src & "shared/generic");

   Compiler_Switches := ();
   Builder_Switches := ();

   for Library_Name     use "sparkcrypto";
   for Library_Kind     use "static";
   for Library_Dir      use "../out/build/adalib";
   for Library_Src_Dir  use "../out/build/adainclude";

   for Object_Dir use "../out/build";

   case Mode is
      when "release" =>
         Compiler_Switches := ("-O3", "-gnatN", "-Winline", "-gnatp");
         for Source_Dirs use Source_Dirs;

      when "debug" =>
         Compiler_Switches := ("-O0");
         for Source_Dirs use (Src & "debug") & Source_Dirs;

   end case;

   case Runtime is
      when "native" =>
         Builder_Switches := ();

      when "zfp" =>
         Builder_Switches := ("--RTS=zfp");

   end case;

   package Builder is
      for Default_Switches ("Ada") use Builder_Switches;
   end Builder;

   package Compiler is
      for Default_Switches ("Ada") use ("-ffunction-sections", "-fdata-sections") & Compiler_Switches;
   end Compiler;

end Build_Libsparkcrypto;
